# Generated by Django 5.1.6 on 2025-03-31 20:26

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('location', models.CharField(max_length=200)),
                ('no_of_units', models.IntegerField(blank=True, null=True)),
                ('cost_of_rent', models.IntegerField(blank=True, null=True)),
                ('availability', models.IntegerField()),
                ('property_image', models.ImageField(blank=True, null=True, upload_to='properties_images/')),
            ],
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_no', models.CharField(max_length=11, primary_key=True, serialize=False, unique=True)),
                ('id_image', models.ImageField(blank=True, null=True, upload_to='properties_images/')),
                ('groups', models.ManyToManyField(blank=True, related_name='customer_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='customer_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Tenancy_Agreement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_start_date', models.DateField()),
                ('contract_duration', models.IntegerField(help_text='Duration in months')),
                ('contact_end_date', models.DateField(blank=True, null=True)),
                ('total_amount_paid', models.IntegerField(blank=True, null=True)),
                ('phone_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tenancy_agreements', to=settings.AUTH_USER_MODEL)),
                ('property_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tenancy_agreements', to='rent_in_app.property')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_paid', models.IntegerField(blank=True, null=True)),
                ('amount_left', models.IntegerField(blank=True, null=True)),
                ('total_amount_paid', models.IntegerField(blank=True, null=True)),
                ('first_payment_date', models.DateField(auto_now=True)),
                ('last_payment_date', models.DateField(auto_now_add=True)),
                ('phone_no', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to=settings.AUTH_USER_MODEL)),
                ('tenancy_agreement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='rent_in_app.tenancy_agreement')),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_number', models.CharField(max_length=14, unique=True)),
                ('cost', models.IntegerField(blank=True, null=True)),
                ('max_No_of_people', models.IntegerField(blank=True, null=True)),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='units', to='rent_in_app.property')),
            ],
        ),
        migrations.AddField(
            model_name='tenancy_agreement',
            name='room_number',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tenancy_agreements', to='rent_in_app.unit'),
        ),
    ]
